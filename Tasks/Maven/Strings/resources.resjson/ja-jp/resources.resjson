{
  "loc.friendlyName": "Maven",
  "loc.helpMarkDown": "[詳細](https://go.microsoft.com/fwlink/?LinkID=613723)",
  "loc.description": "Apache Maven でビルドします",
  "loc.instanceNameFormat": "Maven $(mavenPOMFile)",
  "loc.group.displayName.junitTestResults": "JUnit のテスト結果",
  "loc.group.displayName.codeCoverage": "コード カバレッジ",
  "loc.group.displayName.advanced": "詳細設定",
  "loc.group.displayName.CodeAnalysis": "コード分析",
  "loc.input.label.mavenPOMFile": "Maven POM ファイル",
  "loc.input.help.mavenPOMFile": "リポジトリのルートから Maven POM ファイルへの相対パス。",
  "loc.input.label.options": "オプション",
  "loc.input.label.goals": "目標",
  "loc.input.label.publishJUnitResults": "TFS/Team Services に発行する",
  "loc.input.help.publishJUnitResults": "Maven のビルドによって生成された JUnit のテスト結果を TFS/Team Services に発行するには、このオプションを選びます。`テスト結果ファイル` と一致する各テスト結果ファイルが、TFS/Team Services でのテストの実行として発行されます。",
  "loc.input.label.testResultsFiles": "テスト結果のファイル",
  "loc.input.help.testResultsFiles": "発行するテスト結果ファイルのパスとパターンを指定します。たとえば、名前が `TEST-` で始まるすべての XML ファイルの場合は `**/TEST-*.xml` です。ルート パスを指定しないと、既定の作業ディレクトリ (その値は変数 $(System.DefaultWorkingDirectory) に入っています) の下のファイルが検索されます。たとえば、値 '**/TEST-*.xml' の結果は実際には '$(System.DefaultWorkingDirectory)/**/TEST-*.xml' の一致ファイルとなります。",
  "loc.input.label.testRunTitle": "テスト実行のタイトル",
  "loc.input.help.testRunTitle": "テストの実行の名前を指定します。",
  "loc.input.label.codeCoverageTool": "コード カバレッジ ツール",
  "loc.input.help.codeCoverageTool": "コード カバレッジ ツールを選択します。",
  "loc.input.label.classFilter": "クラス包含/除外フィルター",
  "loc.input.help.classFilter": "コード カバレッジの収集にクラスを含めたり除いたりするためのフィルターのコンマ区切り一覧。たとえば、+:com.*,+:org.*,-:my.app*.* と指定します。",
  "loc.input.label.classFilesDirectories": "クラス ファイル ディレクトリ",
  "loc.input.help.classFilesDirectories": "マルチ モジュール プロジェクトの場合、このフィールドは必須です。クラス ファイルやアーカイブ ファイル (JAR、WAR など) を格納するディレクトリ (Maven POM ファイルから見た相対パス) のコンマ区切り一覧を指定します。コード カバレッジはこれらのディレクトリ内のクラス ファイルに関して報告されます。たとえば、target/classes,target/testClasses と指定します。",
  "loc.input.label.srcDirectories": "ソース ファイル ディレクトリ",
  "loc.input.help.srcDirectories": "マルチ モジュール プロジェクトの場合、このフィールドは必須です。ソース コード ディレクトリへのパス (Maven POM ファイルから見た相対パス) のコンマ区切りリストを指定します。コード カバレッジ レポートはこれらを使用してソース コードをハイライトします。たとえば、src/java,src/Test と指定します。",
  "loc.input.label.failIfCoverageEmpty": "Fail When Code Coverage Results Are Missing",
  "loc.input.help.failIfCoverageEmpty": "Fail the build if code coverage did not produce any results to publish.",
  "loc.input.label.javaHomeSelection": "次の条件で JAVA_HOME を設定します",
  "loc.input.help.javaHomeSelection": "ビルド中に検出される JDK バージョンを選択するか、JDK パスを手動で入力して JAVA_HOME を設定します。",
  "loc.input.label.jdkVersion": "JDK のバージョン",
  "loc.input.help.jdkVersion": "選択した JDK のバージョンへのパスの検出を試みて、それに従って JAVA_HOME を設定します。",
  "loc.input.label.jdkUserInputPath": "JDK パス",
  "loc.input.help.jdkUserInputPath": "指定したパスに JAVA_HOME を設定します。",
  "loc.input.label.jdkArchitecture": "JDK アーキテクチャ",
  "loc.input.help.jdkArchitecture": "(省略可能) JDK のアーキテクチャ (x86、x64) を指定します。",
  "loc.input.label.mavenVersionSelection": "Maven のバージョン",
  "loc.input.help.mavenVersionSelection": "既定の Maven バージョンまたは指定したカスタム パスにあるバージョンのいずれかを使用します。",
  "loc.input.label.mavenPath": "Maven のパス",
  "loc.input.help.mavenPath": "Maven インストールへのカスタム パスを指定します (例: /usr/share/maven)。",
  "loc.input.label.mavenSetM2Home": "M2_HOME 変数の設定",
  "loc.input.help.mavenSetM2Home": "M2_HOME 変数をカスタム Maven インストール パスに設定します。",
  "loc.input.label.mavenOpts": "MAVEN_OPTS を次のように設定します:",
  "loc.input.help.mavenOpts": "JVM を起動するためにコマンド ライン引数を送信する MAVEN_OPTS 環境変数を設定します。xmx フラグは JVM で使用可能な最大メモリを指定します。",
  "loc.input.label.sqAnalysisEnabled": "SonarQube の解析を実行",
  "loc.input.help.sqAnalysisEnabled": "現在のゴールを実行したら、[SonarQube 解析](https://go.microsoft.com/fwlink/?LinkID=708598) を実行します。'install' または 'package' のゴールは最初に実行する必要があります。",
  "loc.input.label.sqConnectedServiceName": "SonarQube エンドポイント",
  "loc.input.help.sqConnectedServiceName": "SonarQube サーバー汎用エンドポイント",
  "loc.input.label.sqProjectName": "SonarQube プロジェクト名",
  "loc.input.help.sqProjectName": "SonarQube プロジェクト名 (sonar.projectName)。",
  "loc.input.label.sqProjectKey": "SonarQube プロジェクト キー",
  "loc.input.help.sqProjectKey": "SonarQube プロジェクトの一意キー (sonar.projectKey)。",
  "loc.input.label.sqProjectVersion": "SonarQube プロジェクト バージョン",
  "loc.input.help.sqProjectVersion": "SonarQube プロジェクトのバージョン (sonar.projectVersion)。",
  "loc.input.label.sqDbDetailsRequired": "SonarQube サーバーのバージョンは 5.2 より前です",
  "loc.input.help.sqDbDetailsRequired": "SonarQube サーバー 5.1 以前を使用している場合は、データベース接続の詳細を指定する必要があります。",
  "loc.input.label.sqDbUrl": "DB 接続文字列",
  "loc.input.help.sqDbUrl": "SonarQube サーバー 5.1 以前のみ。データベース接続設定 (sonar.jdbc.url) を入力します。例: jdbc:jtds:sqlserver://localhost/sonar;SelectMethod=Cursor",
  "loc.input.label.sqDbUsername": "DB ユーザー名",
  "loc.input.help.sqDbUsername": "SonarQube サーバー 5.1 以前のみ。データベース ユーザーのユーザー名 (sonar.jdbc.username) を入力します。",
  "loc.input.label.sqDbPassword": "DB ユーザー パスワード",
  "loc.input.help.sqDbPassword": "SonarQube サーバー 5.1 以前のみ。データベース ユーザーのパスワード (sonar.jdbc.password) を入力します",
  "loc.input.label.sqAnalysisIncludeFullReport": "ビルド概要 (SQ 5.3+) に完全な解析レポートが含まれる",
  "loc.input.help.sqAnalysisIncludeFullReport": "SonarQube の解析が完了するまで、このオプションはビルドを遅延させます。",
  "loc.input.label.sqAnalysisBreakBuildIfQualityGateFailed": "品質ゲートのエラー時のビルドの失敗 (SQ 5.3+)",
  "loc.input.help.sqAnalysisBreakBuildIfQualityGateFailed": "このオプションは、SonarQube サーバー 5.3 以降を使っている場合にのみ使用可能です。SonarQube が分析を完了するまでビルドを待機する必要があるため、遅延が発生します。[詳細情報] (https://go.microsoft.com/fwlink/?LinkId=722407)",
  "loc.input.label.checkstyleAnalysisEnabled": "Checkstyle の実行",
  "loc.input.help.checkstyleAnalysisEnabled": "既定の Sun チェックを使用して Checkstyle ツールを実行します。結果はビルド成果物としてアップロードされます。",
  "loc.input.label.pmdAnalysisEnabled": "PMD の実行",
  "loc.input.help.pmdAnalysisEnabled": "PMD スタティック分析ツールを使用してコード内のバグを調べます。結果はビルドの成果物としてアップロードされます。",
  "loc.input.label.findbugsAnalysisEnabled": "FindBugs の実行",
  "loc.input.help.findbugsAnalysisEnabled": "FindBugs スタティック分析ツールを使用してコード内のバグを調べます。結果はビルドの成果物としてアップロードされます。",
  "loc.messages.sqCommon_CreateTaskReport_MissingField": "TaskReport オブジェクトの作成に失敗しました。フィールド %s が見つかりません",
  "loc.messages.sqCommon_WaitingForAnalysis": "SonarQube サーバーによるビルドの分析を待機しています。",
  "loc.messages.sqCommon_NotWaitingForAnalysis": "SonarQube 分析を待機するようビルドが構成されていません。詳細な品質ゲートの状態は提供されません。",
  "loc.messages.sqCommon_QualityGateStatusUnknown": "品質ゲートの状態を検出できないか、新しい状態が導入されています。",
  "loc.messages.sqCommon_InvalidResponseFromServer": "サーバーが無効または予期しない応答形式で応答しました。",
  "loc.messages.codeAnalysis_ToolIsEnabled": "%s の解析が有効です。",
  "loc.messages.codeAnalysis_ToolFailed": "%s の解析に失敗しました。",
  "loc.messages.sqAnalysis_IncrementalMode": "PR ビルドが検出されました - インクリメンタル モードで SonarQube 解析を実行しています",
  "loc.messages.sqAnalysis_BuildSummaryTitle": "SonarQube 解析レポート",
  "loc.messages.sqAnalysis_TaskReportInvalid": "タスク レポートが無効であるか、見つかりません。SonarQube が正常に終了したことをご確認ください。",
  "loc.messages.sqAnalysis_BuildSummary_LinkText": "詳しい SonarQube レポート",
  "loc.messages.sqAnalysis_BuildSummary_CannotAuthenticate": "SonarQube サーバーへ認証できません。保存したエンドポイントの詳細とサーバーの状態を確認してください。",
  "loc.messages.sqAnalysis_AnalysisTimeout": "%d 秒の所定時間内に分析が完了しませんでした。",
  "loc.messages.sqAnalysis_IsPullRequest_SkippingBuildSummary": "プル要求ビルド: 詳細 SonarQube ビルドの概要は提供されません。",
  "loc.messages.sqAnalysis_IsPullRequest_SkippingBuildBreaker": "プル要求ビルド: 品質ゲートが失敗してもビルドは中断されません。",
  "loc.messages.sqAnalysis_BuildBrokenDueToQualityGateFailure": "このビルドに関連する SonarQube 品質ゲートが失敗しました。",
  "loc.messages.sqAnalysis_QualityGatePassed": "このビルドに関連する SonarQube 品質ゲートに合格しました (状態 %s)",
  "loc.messages.sqAnalysis_UnknownComparatorString": "SonarQube ビルドの概要に問題が発生しました: 不明な比較演算子 '%s'",
  "loc.messages.sqAnalysis_NoUnitsFound": "SonarQube 測定単位のリストをサーバーから取得できませんでした。",
  "loc.messages.sqAnalysis_NoReportTask": "report-task.txt が見つかりませんでした。考えられる原因: SonarQube 分析が正常に完了しませんでした。",
  "loc.messages.sqAnalysis_MultipleReportTasks": "複数の report-task.txt ファイルが見つかりました。最初のファイルを選択します。ビルドの概要とビルドのブレーカーが正しくない可能性があります。考えられる原因: 同じビルド内に複数の SonarQube 分析がありますが、これはサポートされていません。",
  "loc.messages.codeAnalysisBuildSummaryLine_SomeViolationsSomeFiles": "%s により、%d 個のファイルで %d 件の違反が見つかりました。",
  "loc.messages.codeAnalysisBuildSummaryLine_SomeViolationsOneFile": "%s により、1 つのファイルで %d 件の違反が見つかりました。",
  "loc.messages.codeAnalysisBuildSummaryLine_OneViolationOneFile": "%s により、1 つのファイルで 1 件の違反が見つかりました。",
  "loc.messages.codeAnalysisBuildSummaryLine_NoViolations": "%s で違反は見つかりませんでした。",
  "loc.messages.codeAnalysisBuildSummaryTitle": "コード分析レポート",
  "loc.messages.codeAnalysisArtifactSummaryTitle": "コード分析結果",
  "loc.messages.codeAnalysisDisabled": "コード分析はビルド環境の外部では無効です。%s の値が見つかりませんでした",
  "loc.messages.LocateJVMBasedOnVersionAndArch": "Java %s %s の JAVA_HOME を検索する",
  "loc.messages.FailedToLocateSpecifiedJVM": "指定した JDK バージョンが見つかりませんでした。環境変数 '%s' が存在し、対応する JDK の場所に設定されていることをご確認ください。",
  "loc.messages.NoCodeCoverage": "No code coverage results were found to publish."
}